/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <15 1 3 0 12 24 36 37 25 13 14 2 26 38 51 52 53 42 41 40 39 27 28 29 17 16 4 5 50 54 55 56 57>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <50 51 53 52 6 30 18 43 54 55 44 56 57 49 48 46 45 47 35 34 33 31 32 19 20 22 23 11 10 9 8 7 21>;
        };

        hmlt: hmlt {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <15 1 3 0 12 24 36 37 25 13 14 2 26 38 51 52 53 42 41 40 39 27 28 29 17 16 4 5 50 54 55 56 57>;
            hold-trigger-on-release;
        };

        hmrt: hmrt {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <50 51 53 52 6 30 18 43 54 55 44 56 57 49 48 46 45 47 35 34 33 31 32 19 20 22 23 11 10 9 8 7 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE  &kp N1        &kp N2             &kp N3           &kp N4               &kp N5                                       &kp N6     &kp N7                &kp N8            &kp N9              &kp N0                &kp DEL
&kp TAB    &kp Q         &kp W              &kp E            &kp R                &kp T                                        &kp Y      &kp U                 &kp I             &kp O               &kp P                 &kp NON_US_BACKSLASH
&kp ESC    &hml LCTRL A  &hml LEFT_SHIFT S  &hml LEFT_ALT D  &hml LEFT_COMMAND F  &kp G                                        &kp H      &hmr RIGHT_COMMAND J  &hmr RIGHT_ALT K  &hmr RIGHT_SHIFT L  &hmr RCTRL SEMICOLON  &kp SQT
&mo 2      &kp Z         &kp X              &kp C            &kp V                &kp B      &mo 1          &mo 2              &kp N      &kp M                 &kp COMMA         &kp DOT             &kp FSLH              &mo 1
                                            &none            &none                &kp SPACE  &hmlt 1 TAB    &hmrt 2 BACKSPACE  &kp ENTER  &none                 &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_AL_TASK_MANAGER  &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &none         &none                               &kp K_PREVIOUS  &kp K_PLAY_PAUSE  &kp K_NEXT    &kp K_MUTE       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&trans                &trans                &trans                 &trans                                  &trans        &trans                              &trans          &trans            &trans        &trans           &trans             &trans
&bt BT_CLR            &bt BT_SEL 0          &bt BT_SEL 1           &bt BT_SEL 2                            &bt BT_SEL 3  &bt BT_SEL 4                        &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW  &kp RIGHT_ARROW  &trans             &trans
&trans                &ext_power EP_ON      &ext_power EP_OFF      &ext_power EP_TOG                       &trans        &trans        &trans    &trans      &trans          &trans            &trans        &trans           &trans             &trans
                                                                   &trans                                  &trans        &trans        &trans    &kp DELETE  &trans          &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &kp F6                                      &kp F7                 &kp F8     &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &kp MINUS  &kp LEFT_BRACE                              &kp RIGHT_BRACE        &kp EQUAL  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans     &kp LEFT_BRACKET                            &kp RIGHT_BRACKET      &trans     &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans     &kp LEFT_PARENTHESIS  &trans        &trans  &kp RIGHT_PARENTHESIS  &trans     &trans  &trans   &trans   &trans
                        &trans  &trans     &trans                &kp ESCAPE    &trans  &trans                 &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
